<ui:ClickThrouWindow x:Class="DamageMeter.UI.MainWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:controls="clr-namespace:DamageMeter.UI.Controls"
                     xmlns:controls1="clr-namespace:DamageMeter.UI.HUD.Controls"
                     xmlns:converters="clr-namespace:DamageMeter.UI.HUD.Converters"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:extensions="clr-namespace:Nostrum.Extensions;assembly=Nostrum"
                     xmlns:game="clr-namespace:Tera.Game;assembly=Tera.Core"
                     xmlns:hud="clr-namespace:DamageMeter.UI.HUD"
                     xmlns:l="clr-namespace:Lang;assembly=Lang"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:measure="clr-namespace:LiveChartsCore.Measure;assembly=LiveChartsCore"
                     xmlns:nostrum="clr-namespace:Nostrum.Converters;assembly=Nostrum"
                     xmlns:ui="clr-namespace:DamageMeter.UI"
                     xmlns:windows="clr-namespace:DamageMeter.UI.Windows"
                     xmlns:wpf="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
                     Title="{Binding WindowTitle}"
                     MinWidth="219"
                     MinHeight="60"
                     d:DataContext="{d:DesignInstance ui:MainViewModel}"
                     Background="#01000000"
                     Closed="MainWindow_OnClosed"
                     Icon="{Binding WindowIcon}"
                     Loaded="MainWindow_OnLoaded"
                     MouseEnter="MainWindow_OnMouseEnter"
                     MouseLeave="MainWindow_OnMouseLeave"
                     SizeToContent="WidthAndHeight"
                     mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="EmptyModeButtonPathStyle"
               BasedOn="{StaticResource PathBaseStyle}"
               TargetType="Path">
            <Setter Property="Height" Value="19" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Width" Value="Auto" />
        </Style>
        <Style x:Key="FooterButtonPathStyle"
               BasedOn="{StaticResource PathBaseStyle}"
               TargetType="Path">
            <Setter Property="Margin" Value="4" />
        </Style>
        <Style x:Key="FooterButtonSvgLedStyle"
               TargetType="windows:SvgLed">
            <Setter Property="Margin" Value="3" />
            <Setter Property="OnBrush" Value="White" />
            <Setter Property="OffBrush" Value="White" />
        </Style>
        <Style x:Key="EmptyModeButtonStyle"
               BasedOn="{StaticResource ButtonMainStyle}"
               TargetType="Button">
            <Setter Property="extensions:ButtonExtensions.CornerRadius" Value="18" />
            <Setter Property="Height" Value="36" />
            <Setter Property="Width" Value="36" />
            <Setter Property="Margin" Value="10 0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ClickThru}"
                             Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FooterButtonStyle"
               BasedOn="{StaticResource ButtonContentOpacityStyle}"
               TargetType="Button">
            <Setter Property="Height" Value="25" />
            <Setter Property="Width" Value="25" />
            <Setter Property="Margin" Value="3" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="FooterButtonHideableStyle"
               BasedOn="{StaticResource FooterButtonStyle}"
               TargetType="Button">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsEmpty}"
                             Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="BackgroundBorderStyle"
               BasedOn="{StaticResource MainBorder}"
               TargetType="Border">
            <Setter Property="Opacity" Value="{Binding WindowOpacity}" />
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{Binding BackgroundColor}" />
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="{Binding BorderColor}" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TopmostBorderStyle"
               BasedOn="{StaticResource BackgroundBorderStyle}"
               TargetType="Border">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CornerRadius" Value="8" />
            <!--<Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding UserPaused}" Value="False" />
                                <Condition Binding="{Binding Paused}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="DarkRed" />
                        </MultiDataTrigger>
                    </Style.Triggers>-->
        </Style>
        <Style x:Key="BottomBorderStyle"
               BasedOn="{StaticResource BackgroundBorderStyle}"
               TargetType="Border">
            <Setter Property="CornerRadius" Value="8" />
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{Binding BackgroundColor, Converter={nostrum:ColorBrightnessConverter Factor=0.5}}" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MessagesBorderStyle"
               BasedOn="{StaticResource BottomBorderStyle}"
               TargetType="Border"/>
        <Style x:Key="RootGridStyle"
               TargetType="Grid">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="MinWidth" Value="265" />
            <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=AllowsTransparency, Converter={StaticResource BoolToMargin}}" />
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform CenterX="0" CenterY="0" ScaleX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=Scale}" ScaleY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=Scale}" />
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="EmptyTemplate">
            <!--  Empty mode view  -->
            <Grid Height="60">
                <TextBlock Margin="20 0"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Foreground="#9fff"
                           TextAlignment="Left">
                    <Run FontSize="16"
                         Text="Shinra Meter" />
                    <LineBreak />
                    <windows:SvgLed Width="14"
                                    Height="14"
                                    Margin="0 1 0 -1"
                                    VerticalAlignment="Center"
                                    IsOn="{Binding Connected}"
                                    OffBrush="#5fff"
                                    OffGeometry="{StaticResource Svg.WifiOff}"
                                    OffMargin="0 1 0 0"
                                    OnBrush="LightSeaGreen"
                                    OnGeometry="{StaticResource Svg.WifiOn}"
                                    OnMargin="0 1 0 -1" />
                    <Run BaselineAlignment="Center"
                         FontSize="12"
                         Foreground="#5fff"
                         Text="{Binding ConnectionStatusText, Mode=OneWay}" />
                </TextBlock>

                <Button HorizontalAlignment="Right"
                        Command="{Binding VerifyCloseCommand}"
                        Style="{StaticResource EmptyModeButtonStyle}">
                    <Path Data="{StaticResource Svg.Power}"
                          Fill="{StaticResource LightRed}"
                          Style="{StaticResource EmptyModeButtonPathStyle}" />
                </Button>
                <Button Margin="50 0"
                        HorizontalAlignment="Right"
                        Command="{Binding OpenSettingsCommand}"
                        Style="{StaticResource EmptyModeButtonStyle}">
                    <Path Data="{StaticResource Svg.Settings}"
                          Fill="#9fff"
                          Style="{StaticResource EmptyModeButtonPathStyle}" />
                </Button>

                <windows:SvgLed Width="18"
                                Height="18"
                                Margin="20 0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                IsOn="{Binding ClickThru}"
                                OnBrush="LightSlateGray"
                                OnGeometry="{StaticResource Svg.MouseOff}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="MainTemplate">
            <controls1:MainView />
        </DataTemplate>

        <converters:MainWindowTemplateSelector x:Key="MainWindowTemplateSelector"
                                               Empty="{StaticResource EmptyTemplate}"
                                               Main="{StaticResource MainTemplate}" />


    </Window.Resources>
    <Grid Style="{StaticResource RootGridStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Border x:Name="MainBorder"
                Grid.Row="0"
                Style="{StaticResource TopmostBorderStyle}" />

        <Border x:Name="FooterBorder"
                Grid.Row="2"
                Style="{StaticResource BottomBorderStyle}" />

        <Border x:Name="MessageBorder"
                Grid.Row="1"
                Style="{StaticResource MessagesBorderStyle}" />


        <ContentControl x:Name="MainContent"
                        Content="{Binding}"
                        ContentTemplate="{Binding IsEmpty, Converter={StaticResource MainWindowTemplateSelector}}" />

        <StackPanel x:Name="Messages"
                      Grid.Row="1"
                    >
            <TextBlock Name="TooSlow"
                       Margin="8"
                       HorizontalAlignment="Stretch"
                       Background="Transparent"
                       Foreground="Orange"
                       Text="{x:Static l:LP.Your_computer_is_too_slow}"
                       TextAlignment="Center"
                       TextWrapping="Wrap"
                       >
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Paused}" Value="True" />
                                    <Condition Binding="{Binding UserPaused}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Name="WaitingMapChange"
                       Margin="8"
                       HorizontalAlignment="Stretch"
                       Background="Transparent"
                       FontWeight="DemiBold"
                       Foreground="{StaticResource LightRed}"
                       Text="{x:Static l:LP.WaitingMapChange}"
                       TextAlignment="Center"
                       TextWrapping="Wrap">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding WaitingMapChangeTBVisibile}"
                                         Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Name="UserPaused"
                       Margin="8"
                       HorizontalAlignment="Stretch"
                       Background="Transparent"
                       TextAlignment="Center"
                       TextWrapping="Wrap">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding UserPaused}"
                                         Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
                <Run Foreground="#aaa"
                     Text="{x:Static l:LP.UserPaused}" />
                <LineBreak />
                <Run FontWeight="DemiBold"
                     Foreground="{StaticResource LightRed}"
                     Text="Change map or relog after resuming meter" />
            </TextBlock>

        </StackPanel>

        <!--  Messages  -->

        <!--  Footer  -->
        <UniformGrid Name="Footer"
                     Grid.Row="2"
                     Height="0"
                     Rows="1">

            <!--  Blur button  -->
            <ToggleButton x:Name="HideNames"
                          Height="25"
                          Margin="0 3 3 3"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          IsChecked="{Binding BlurPlayerNames}"
                          Style="{StaticResource ToggleButtonStyle}"
                          ToolTip="{x:Static l:LP.Blur_player_names}">
                <Path Margin="6"
                      Data="{StaticResource Svg.HideNames}"
                      Style="{StaticResource PathBaseStyle}" />
            </ToggleButton>
            <!--  Adds button  -->
            <Button Command="{Binding ToggleAddsCommand}">
                <Button.Style>
                    <Style BasedOn="{StaticResource FooterButtonStyle}"
                           TargetType="Button">
                        <Setter Property="ToolTip" Value="{x:Static l:LP.MainWindow_Only_boss}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShowAdds}"
                                         Value="True">
                                <Setter Property="ToolTip" Value="{x:Static l:LP.MainWindow_Boss_Adds}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <windows:SvgLed IsOn="{Binding ShowAdds}"
                                OffGeometry="{StaticResource Svg.OnlyBoss}"
                                OnGeometry="{StaticResource Svg.ShowAdds}"
                                Style="{StaticResource FooterButtonSvgLedStyle}" />
            </Button>
            <!--  Stats button  -->
            <Button Command="{Binding ShowEntityStatsCommand}">
                <Button.Style>
                    <Style BasedOn="{StaticResource FooterButtonHideableStyle}"
                           TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedEncounter.Info.Name}"
                                         Value="{x:Static l:LP.TotalEncounter}">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Path Data="{StaticResource Svg.EntityStats}"
                      Style="{StaticResource FooterButtonPathStyle}" />
            </Button>
            <!--<windows:FooterButton Command="{Binding ShowUploadHistoryCommand}"
                                  Margin="3"
                                  Height="25"
                                  ToolTip="{x:Static l:LP.SystemTray_Site_export}"
                                  Style="{StaticResource ButtonMainStyle}"
                                  SvgIcon="{StaticResource Svg.History}" />-->
            <!--<windows:FooterButton Command="{Binding ShowBossHPBarCommand}"
                                  ToolTip="{x:Static l:LP.BossHP}"
                                  Margin="3"
                                  Height="25"
                                  Style="{StaticResource ButtonMainStyle}"
                                  SvgIcon="{StaticResource Svg.HPBar}" />-->

            <!--  Pause button  -->
            <Button Command="{Binding TogglePauseCommand}"
                    Style="{StaticResource FooterButtonStyle}">
                <windows:SvgLed Margin="4"
                                IsOn="{Binding UserPaused}"
                                OffGeometry="{StaticResource Svg.Pause}"
                                OnGeometry="{StaticResource Svg.Play}"
                                Style="{StaticResource FooterButtonSvgLedStyle}" />
            </Button>

            <!--  Settings button  -->
            <Button Command="{Binding OpenSettingsCommand}"
                    Style="{StaticResource FooterButtonHideableStyle}">
                <Path Data="{StaticResource Svg.Settings}"
                      Style="{StaticResource FooterButtonPathStyle}" />
            </Button>


            <!--  Close button  -->
            <Button Command="{Binding VerifyCloseCommand}"
                    Style="{StaticResource FooterButtonHideableStyle}">
                <Path Margin="3 3 5 3"
                      Data="{StaticResource Svg.Power}"
                      Fill="{StaticResource LightRed}"
                      Style="{StaticResource FooterButtonPathStyle}" />
            </Button>
        </UniformGrid>

        <windows:ToastControl x:Name="Toast"
                              Grid.RowSpan="2"
                              MaxWidth="{Binding ElementName=MainContent, Path=ActualWidth}"
                              Padding="10 0"
                              Margin="0 4 0 0"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Top"
                              CornerRadius="8"
                              DataContext="{Binding ToastData}"
                              Effect="{StaticResource BarShadow-4dp}"
                              FontSize="12"
                              FontWeight="Normal"
                              Foreground="White"
                              IsHitTestVisible="False"
                              IsShowed="{Binding Visible}"
                              SlideOffset="-5"
                              ToastSeverity="{Binding Severity}"
                              ToastText="{Binding Text}" />
    </Grid>
</ui:ClickThrouWindow>