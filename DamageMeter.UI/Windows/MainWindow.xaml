<ui:ClickThrouWindow x:Class="DamageMeter.UI.MainWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:extensions="clr-namespace:Nostrum.Extensions;assembly=Nostrum"
                     xmlns:game="clr-namespace:Tera.Game;assembly=Tera.Core"
                     xmlns:hud="clr-namespace:DamageMeter.UI.HUD"
                     xmlns:l="clr-namespace:Lang;assembly=Lang"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:measure="clr-namespace:LiveChartsCore.Measure;assembly=LiveChartsCore"
                     xmlns:nostrum="clr-namespace:Nostrum.Converters;assembly=Nostrum"
                     xmlns:ui="clr-namespace:DamageMeter.UI"
                     xmlns:windows="clr-namespace:DamageMeter.UI.Windows"
                     xmlns:wpf="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
                     xmlns:controls="clr-namespace:DamageMeter.UI.Controls"
                     Title="{Binding WindowTitle}"
                     MinWidth="219"
                     MinHeight="60"
                     d:DataContext="{d:DesignInstance ui:MainViewModel}"
                     Background="#01000000"
                     Closed="MainWindow_OnClosed"
                     Icon="{Binding WindowIcon}"
                     Loaded="MainWindow_OnLoaded"
                     MouseEnter="MainWindow_OnMouseEnter"
                     MouseLeave="MainWindow_OnMouseLeave"
                     SizeToContent="WidthAndHeight"
                     mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="EmptyModeButtonPathStyle"
               BasedOn="{StaticResource PathBaseStyle}"
               TargetType="Path">
            <Setter Property="Height" Value="19" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Width" Value="Auto" />
        </Style>
        <Style x:Key="FooterButtonPathStyle"
               BasedOn="{StaticResource PathBaseStyle}"
               TargetType="Path">
            <Setter Property="Margin" Value="3" />
        </Style>
        <Style x:Key="GeneralStatPathStyle"
               BasedOn="{StaticResource PathBaseStyle}"
               TargetType="Path">
            <Setter Property="Margin" Value="0 0 0 -3" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Fill" Value="#5fff" />
            <Setter Property="Height" Value="14" />
            <Setter Property="Width" Value="14" />
        </Style>
        <Style x:Key="GeneralStatTextStyle"
               BasedOn="{StaticResource {x:Type TextBlock}}"
               TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="Margin" Value="5 3" />
            <Setter Property="FontSize" Value="13" />
        </Style>
        <Style x:Key="FooterButtonSvgLedStyle"
               TargetType="windows:SvgLed">
            <Setter Property="Margin" Value="3" />
            <Setter Property="OnBrush" Value="White" />
            <Setter Property="OffBrush" Value="White" />
        </Style>
        <Style x:Key="EmptyModeButtonStyle"
               BasedOn="{StaticResource ButtonMainStyle}"
               TargetType="Button">
            <Setter Property="extensions:ButtonExtensions.CornerRadius" Value="18" />
            <Setter Property="Height" Value="36" />
            <Setter Property="Width" Value="36" />
            <Setter Property="Margin" Value="10 0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ClickThru}"
                             Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FooterButtonStyle"
               BasedOn="{StaticResource ButtonContentOpacityStyle}"
               TargetType="Button">
            <Setter Property="Height" Value="25" />
            <Setter Property="Width" Value="25" />
            <Setter Property="Margin" Value="3" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="FooterButtonHideableStyle"
               BasedOn="{StaticResource FooterButtonStyle}"
               TargetType="Button">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsEmpty}"
                             Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ToolTip}">
            <Setter Property="Background" Value="#8F000000" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock MaxWidth="600"
                                   Text="{Binding}"
                                   TextWrapping="Wrap" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                                Padding="3"
                                BorderThickness="1"
                                SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#1fff" />
                                <Setter Property="BorderBrush" Value="White" />
                                <Setter Property="BorderThickness" Value="1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BackgroundBorderStyle"
               BasedOn="{StaticResource MainBorder}"
               TargetType="Border">
            <Setter Property="Opacity" Value="{Binding WindowOpacity}" />
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{Binding BackgroundColor}" />
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="{Binding BorderColor}" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TopmostBorderStyle"
               BasedOn="{StaticResource BackgroundBorderStyle}"
               TargetType="Border">
            <Setter Property="Grid.RowSpan" Value="7" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CornerRadius" Value="8" />
            <!--<Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding UserPaused}" Value="False" />
                                <Condition Binding="{Binding Paused}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="DarkRed" />
                        </MultiDataTrigger>
                    </Style.Triggers>-->
        </Style>
        <Style x:Key="BottomBorderStyle"
               BasedOn="{StaticResource BackgroundBorderStyle}"
               TargetType="Border">
            <Setter Property="CornerRadius" Value="8" />
            <Setter Property="Grid.Row" Value="7" />
            <Setter Property="Margin" Value="1 5 1 1" />
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{Binding BackgroundColor, Converter={nostrum:ColorBrightnessConverter Factor=0.5}}" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RootGridStyle"
               TargetType="Grid">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="MinWidth" Value="265" />
            <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=AllowsTransparency, Converter={StaticResource BoolToMargin}}" />
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform CenterX="0" CenterY="0" ScaleX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=Scale}" ScaleY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=Scale}" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="EncounterGridStyle"
               TargetType="Grid">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsEmpty}"
                             Value="True">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="EncounterDataTemplate"
                      DataType="game:NpcEntity">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Ellipse Width="6"
                         Height="6"
                         Margin="4 0"
                         VerticalAlignment="Center">
                    <Ellipse.Style>
                        <Style TargetType="Ellipse">
                            <Setter Property="Fill" Value="Coral" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Info.Boss}"
                                             Value="False">
                                    <Setter Property="Fill" Value="DeepSkyBlue" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Info.Name}"
                                             Value="{x:Static l:LP.TotalEncounter}">
                                    <Setter Property="Fill" Value="SlateGray" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>

                    </Ellipse.Style>
                </Ellipse>
                <TextBlock Grid.Column="1"
                           Margin="2 0"
                           MaxWidth="{Binding ElementName=MainBorder}"
                           TextTrimming="CharacterEllipsis">
                    <Run Text="{Binding Info.Name, Mode=OneWay}">
                        <Run.Style>
                            <Style TargetType="Run">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Info.Name}"
                                                 Value="{x:Static l:LP.TotalEncounter}">
                                        <Setter Property="FontWeight" Value="DemiBold" />
                                        <Setter Property="Foreground" Value="#888" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Run.Style>
                    </Run>
                    <Run Foreground="#888"
                         Text="{Binding Info.Area, Mode=OneWay}" />
                </TextBlock>
            </Grid>

        </DataTemplate>
    </Window.Resources>
    <Grid Style="{StaticResource RootGridStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Border x:Name="FooterBorder"
                Style="{StaticResource BottomBorderStyle}" />
        <Border Style="{StaticResource TopmostBorderStyle}" x:Name="MainBorder"/>

        <!--  Encounter  -->
        <Grid Name="EGrid"
              Style="{StaticResource EncounterGridStyle}"
              >
            <ComboBox x:Name="ListEncounter"
                      Grid.Column="0"
                      Width="Auto"
                      Height="5"
                      MinHeight="29"
                      MaxWidth="{Binding ElementName=MainBorder, Path=ActualWidth}"
                      Margin="0"
                      controls:ComboBoxExtensions.CornerRadius="8 8 0 0"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Top"
                      HorizontalContentAlignment="Left"
                      ui:ComboBoxBehavior.FixWin10HilightBug="True"
                      DropDownClosed="ListEncounter_OnDropDownClosed"
                      DropDownOpened="ListEncounter_OnDropDownOpened"
                      ItemTemplate="{StaticResource EncounterDataTemplate}"
                      ItemsSource="{Binding Encounters}"
                      PreviewKeyDown="ListEncounterOnPreviewKeyDown"
                      SelectedItem="{Binding SelectedEncounter}"
                      SelectionChanged="ListEncounter_OnSelectionChanged" />
        </Grid>

        <!--  General stats  -->
        <Grid Name="SGrid"
              Grid.Row="1"
              Height="Auto"
              HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0"
                    Margin="1 0 5 0"
                    HorizontalAlignment="Left"
                    HorizontalContentAlignment="Left"
                    VerticalContentAlignment="Center"
                    Command="{Binding ChangeTimeLeftCommand}"
                    Style="{StaticResource ButtonMainStyle}">
                <TextBlock x:Name="Timer"
                           Style="{StaticResource GeneralStatTextStyle}">
                    <Path Width="16"
                          Height="16"
                          Data="{StaticResource Svg.Timer}">
                        <Path.Style>
                            <Style BasedOn="{StaticResource GeneralStatPathStyle}"
                                   TargetType="Path">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ShowTimeLeft}"
                                                 Value="True">
                                        <Setter Property="Fill" Value="Coral" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                    <Run Text="{Binding TimerText, Mode=OneWay}" />
                </TextBlock>
            </Button>
            <TextBlock x:Name="PartyDps"
                       Grid.Column="1"
                       Style="{StaticResource GeneralStatTextStyle}">
                <Path Data="{StaticResource Svg.Sword}"
                      Style="{StaticResource GeneralStatPathStyle}" />
                <Run Text="{Binding TotalDpsText, Mode=OneWay}" />
            </TextBlock>
            <TextBlock x:Name="TotalDamage"
                       Grid.Column="2"
                       Style="{StaticResource GeneralStatTextStyle}">
                <Path Data="{StaticResource Svg.HeartHalfFull}"
                      Style="{StaticResource GeneralStatPathStyle}" />
                <Run Text="{Binding TotalDamageText, Mode=OneWay}" />
            </TextBlock>

            <Grid Grid.Column="2"
                  Margin="5 0">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding LoadWarning}"
                                         Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Ellipse Width="16"
                         Height="16"
                         HorizontalAlignment="Right"
                         Fill="#1aaa"
                         Stroke="#2fff" />
                <hud:Arc Width="16"
                         Height="16"
                         HorizontalAlignment="Right"
                         EndAngle="{Binding QueuedPackets, Converter={StaticResource LoadToAngle}}"
                         StartAngle="0"
                         Stretch="None"
                         Stroke="{Binding QueuedPackets, Converter={StaticResource LoadToColor}}"
                         StrokeThickness="1" />

                <TextBlock x:Name="QueuedPacketsLed"
                           Margin="0 -1 6 0"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           FontSize="11"
                           FontWeight="Black"
                           Foreground="{Binding QueuedPackets, Converter={StaticResource LoadToColor}}"
                           Text="!"
                           ToolTip="Overload indicator. When red, notification functions will be temporarily disabled" />

            </Grid>
            <windows:SvgLed Grid.Column="2"
                            Width="10"
                            Height="10"
                            Margin="0 1 26 0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            IsOn="{Binding ClickThru}"
                            OffBrush="#0fff"
                            OffGeometry="{StaticResource Svg.MouseOn}"
                            OnBrush="#5fff"
                            OnGeometry="{StaticResource Svg.MouseOff}"
                            OnMargin="0 0 1 0"
                            ToolTip="Click through" />
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HideGeneralData}"
                                     Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsEmpty}"
                                     Value="True">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>

        <!--  Empty mode view  -->
        <Grid Grid.RowSpan="2"
              VerticalAlignment="Stretch">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsEmpty}"
                                     Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <TextBlock Margin="20 0"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Foreground="#9fff"
                       TextAlignment="Left">
                <Run FontSize="16"
                     Text="Shinra Meter" />
                <LineBreak />
                <windows:SvgLed Width="14"
                                Height="14"
                                Margin="0 1 0 -1"
                                VerticalAlignment="Center"
                                IsOn="{Binding Connected}"
                                OffBrush="#5fff"
                                OffGeometry="{StaticResource Svg.WifiOff}"
                                OffMargin="0 1 0 0"
                                OnBrush="LightSeaGreen"
                                OnGeometry="{StaticResource Svg.WifiOn}"
                                OnMargin="0 1 0 -1" />
                <Run BaselineAlignment="Center"
                     FontSize="12"
                     Foreground="#5fff"
                     Text="{Binding ConnectionStatusText, Mode=OneWay}" />
            </TextBlock>

            <Button HorizontalAlignment="Right"
                    Command="{Binding VerifyCloseCommand}"
                    Style="{StaticResource EmptyModeButtonStyle}">
                <Path Data="{StaticResource Svg.Power}"
                      Fill="{StaticResource LightRed}"
                      Style="{StaticResource EmptyModeButtonPathStyle}" />
            </Button>
            <Button Margin="50 0"
                    HorizontalAlignment="Right"
                    Command="{Binding OpenSettingsCommand}"
                    Style="{StaticResource EmptyModeButtonStyle}">
                <Path Data="{StaticResource Svg.Settings}"
                      Fill="#9fff"
                      Style="{StaticResource EmptyModeButtonPathStyle}" />
            </Button>

            <windows:SvgLed Width="18"
                            Height="18"
                            Margin="20 0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            IsOn="{Binding ClickThru}"
                            OnBrush="LightSlateGray"
                            OnGeometry="{StaticResource Svg.MouseOff}" />
        </Grid>

        <!--  Players  -->
        <Grid x:Name="PlayersContainer"
              Grid.Row="2"
              Margin="1">

            <ScrollViewer x:Name="Scroller"
                          MaxHeight="{Binding NumberOfPlayersDisplayed, Converter={StaticResource PlayersCountToSize}}"
                          VerticalScrollBarVisibility="Auto">
                <ItemsControl Name="PlayersIC"
                              HorizontalAlignment="Stretch"
                              Background="Transparent"
                              BorderThickness="0"
                              Focusable="False"
                              Grid.IsSharedSizeScope="True"
                              IsTextSearchEnabled="False"
                              ItemsSource="{Binding PlayersView}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="ui:PlayerDamageViewModel">
                            <ui:PlayerStatsControl />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
            <!--<FrameworkElement.Style>
                <Style TargetType="FrameworkElement">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding GraphData.IsChartVisible}"
                                     Value="False">
                            <Setter Property="OpacityMask">
                                <Setter.Value>
                                    <VisualBrush Stretch="Uniform">
                                        <VisualBrush.Visual>
                                            <Border Width="{Binding ElementName=Scroller, Path=ActualWidth}"
                                                    Height="{Binding ElementName=Scroller, Path=ActualHeight}"
                                                    Background="White"
                                                    CornerRadius="0 0 8 8" 
                                                    x:Name="PlayersOpacityMask"/>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </FrameworkElement.Style>-->
        </Grid>

        <!--  Messages  -->
        <TextBlock Name="TooSlow"
                   Grid.Row="3"
                   Margin="10 5"
                   HorizontalAlignment="Stretch"
                   Background="Transparent"
                   Foreground="Yellow"
                   Text="{x:Static l:LP.Your_computer_is_too_slow}"
                   TextAlignment="Center"
                   TextWrapping="Wrap">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Paused}" Value="True" />
                                <Condition Binding="{Binding UserPaused}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <TextBlock Name="WaitingMapChange"
                   Grid.Row="4"
                   Margin="10 5"
                   HorizontalAlignment="Stretch"
                   Background="Transparent"
                   FontWeight="DemiBold"
                   Foreground="{StaticResource LightRed}"
                   Text="{x:Static l:LP.WaitingMapChange}"
                   TextAlignment="Center"
                   TextWrapping="Wrap">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding WaitingMapChangeTBVisibile}"
                                     Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <TextBlock Name="UserPaused"
                   Grid.Row="5"
                   Margin="10 5"
                   HorizontalAlignment="Stretch"
                   Background="Transparent"
                   TextAlignment="Center"
                   TextWrapping="Wrap">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding UserPaused}"
                                     Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
            <Run Foreground="#aaa"
                 Text="{x:Static l:LP.UserPaused}" />
            <LineBreak />
            <Run FontWeight="DemiBold"
                 Foreground="{StaticResource LightRed}"
                 Text="Change map or relog after resuming meter" />
        </TextBlock>

        <!--  Graph  -->
        <Grid x:Name="GraphContainer"
              Grid.Row="6">
            <Grid.Style>
                <Style TargetType="FrameworkElement">
                    <Setter Property="Height" Value="0" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding GraphData.IsChartVisible}"
                                     Value="True">
                            <Setter Property="Height" Value="140" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <wpf:CartesianChart Width="{Binding ActualWidth, ElementName=GraphContainer}"
                                Height="140"
                                Margin="0 0 0 1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Sections="{Binding GraphData.EnrageSections}"
                                Series="{Binding GraphData.DpsSeries}"
                                XAxes="{Binding GraphData.XAxes}"
                                YAxes="{Binding GraphData.YAxes}"
                                ZoomMode="X">
                <wpf:CartesianChart.Style>
                    <Style TargetType="wpf:CartesianChart">
                        <Setter Property="AnimationsSpeed" Value="0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding GraphData.IsAnimated}"
                                         Value="True">
                                <Setter Property="AnimationsSpeed" Value="0:0:0.5" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </wpf:CartesianChart.Style>
                <wpf:CartesianChart.Tooltip>
                    <ui:RealtimeChartTooltip />
                </wpf:CartesianChart.Tooltip>
                <wpf:CartesianChart.DrawMargin>
                    <measure:Margin Bottom="0"
                                    Left="0"
                                    Right="0"
                                    Top="0" />
                </wpf:CartesianChart.DrawMargin>
                <wpf:CartesianChart.OpacityMask>
                    <VisualBrush Stretch="Uniform">
                        <VisualBrush.Visual>
                            <Border Width="{Binding ElementName=GraphContainer, Path=ActualWidth}"
                                    Height="{Binding ElementName=GraphContainer, Path=ActualHeight}"
                                    Background="White"
                                    CornerRadius="0 0 8 8" />
                        </VisualBrush.Visual>
                    </VisualBrush>
                </wpf:CartesianChart.OpacityMask>
            </wpf:CartesianChart>
        </Grid>

        <!--  Footer  -->
        <UniformGrid Name="Footer"
                     Grid.Row="7"
                     Height="0"
                     Rows="1">

            <!--  Blur button  -->
            <ToggleButton x:Name="HideNames"
                          Height="25"
                          Margin="0 3 3 3"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          IsChecked="{Binding BlurPlayerNames}"
                          Style="{StaticResource ToggleButtonStyle}"
                          ToolTip="{x:Static l:LP.Blur_player_names}">
                <Path Margin="6"
                      Data="{StaticResource Svg.HideNames}"
                      Style="{StaticResource PathBaseStyle}" />
            </ToggleButton>
            <!--  Adds button  -->
            <Button Command="{Binding ToggleAddsCommand}">
                <Button.Style>
                    <Style BasedOn="{StaticResource FooterButtonStyle}"
                           TargetType="Button">
                        <Setter Property="ToolTip" Value="{x:Static l:LP.MainWindow_Only_boss}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShowAdds}"
                                         Value="True">
                                <Setter Property="ToolTip" Value="{x:Static l:LP.MainWindow_Boss_Adds}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <windows:SvgLed IsOn="{Binding ShowAdds}"
                                OffGeometry="{StaticResource Svg.OnlyBoss}"
                                OnGeometry="{StaticResource Svg.ShowAdds}"
                                Style="{StaticResource FooterButtonSvgLedStyle}" />
            </Button>
            <!--  Stats button  -->
            <Button Command="{Binding ShowEntityStatsCommand}">
                <Button.Style>
                    <Style BasedOn="{StaticResource FooterButtonHideableStyle}"
                           TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedEncounter.Info.Name}"
                                         Value="{x:Static l:LP.TotalEncounter}">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Path Data="{StaticResource Svg.EntityStats}"
                      Style="{StaticResource FooterButtonPathStyle}" />
            </Button>
            <!--<windows:FooterButton Command="{Binding ShowUploadHistoryCommand}"
                                  Margin="3"
                                  Height="25"
                                  ToolTip="{x:Static l:LP.SystemTray_Site_export}"
                                  Style="{StaticResource ButtonMainStyle}"
                                  SvgIcon="{StaticResource Svg.History}" />-->
            <!--<windows:FooterButton Command="{Binding ShowBossHPBarCommand}"
                                  ToolTip="{x:Static l:LP.BossHP}"
                                  Margin="3"
                                  Height="25"
                                  Style="{StaticResource ButtonMainStyle}"
                                  SvgIcon="{StaticResource Svg.HPBar}" />-->

            <!--  Settings button  -->
            <Button Command="{Binding OpenSettingsCommand}"
                    Style="{StaticResource FooterButtonHideableStyle}">
                <Path Data="{StaticResource Svg.Settings}"
                      Style="{StaticResource FooterButtonPathStyle}" />
            </Button>

            <!--  Pause button  -->
            <Button Command="{Binding TogglePauseCommand}"
                    Style="{StaticResource FooterButtonStyle}">
                <windows:SvgLed IsOn="{Binding UserPaused}"
                                OffGeometry="{StaticResource Svg.Pause}"
                                OnGeometry="{StaticResource Svg.Play}"
                                Style="{StaticResource FooterButtonSvgLedStyle}" />
            </Button>

            <!--  Close button  -->
            <Button Command="{Binding VerifyCloseCommand}"
                    Style="{StaticResource FooterButtonHideableStyle}">
                <Path Margin="3 3 5 3"
                      Data="{StaticResource Svg.Power}"
                      Fill="{StaticResource LightRed}"
                      Style="{StaticResource FooterButtonPathStyle}" />
            </Button>
        </UniformGrid>

        <windows:ToastControl x:Name="Toast"
                              Grid.RowSpan="3"
                              MaxWidth="230"
                              Padding="10 0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Top"
                              CornerRadius="0 0 8 8"
                              DataContext="{Binding ToastData}"
                              Effect="{StaticResource BarShadow-4dp}"
                              FontSize="12"
                              FontWeight="Normal"
                              Foreground="White"
                              IsHitTestVisible="False"
                              IsShowed="{Binding Visible}"
                              SlideOffset="-5"
                              ToastSeverity="{Binding Severity}"
                              ToastText="{Binding Text}" />
    </Grid>
</ui:ClickThrouWindow>